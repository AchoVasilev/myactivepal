plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.0.1"
    id("io.micronaut.aot") version "4.0.1"
}

apply plugin: 'groovy'
apply from: "gradle/migration.gradle"

version = "0.1"
group = "com.project"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor('io.micronaut.serde:micronaut-serde-processor:1.5.2')
    annotationProcessor('io.micronaut.data:micronaut-data-processor:3.9.6')
    annotationProcessor('io.micronaut.validation:micronaut-validation-processor')

    implementation('io.micronaut.serde:micronaut-serde-jackson:1.5.2')
    implementation('io.micronaut.data:micronaut-data-hibernate-jpa:3.9.6')
    implementation('io.micronaut.data:micronaut-data-jdbc:3.9.6')
    implementation('io.micronaut.sql:micronaut-jdbc-hikari:4.8.0')
    implementation('io.micronaut.validation:micronaut-validation')
    implementation('io.micronaut.flyway:micronaut-flyway:5.5.0')

    implementation('jakarta.persistence:jakarta.persistence-api:3.1.0')
    implementation('jakarta.annotation:jakarta.annotation-api:2.1.1')

    implementation('com.cloudinary:cloudinary-core:1.34.0')
    implementation('com.cloudinary:cloudinary-http44:1.34.0')
    implementation('io.github.cdimascio:java-dotenv:5.2.2')

    implementation platform('org.testcontainers:testcontainers-bom:1.19.1')

    runtimeOnly('ch.qos.logback:logback-classic:1.4.7')
    runtimeOnly('org.yaml:snakeyaml:2.0')
    runtimeOnly('org.postgresql:postgresql:42.5.4')

    testImplementation('io.micronaut:micronaut-http-client:3.8.7')
    testImplementation('io.micronaut:micronaut-inject-groovy:3.8.7')
    testImplementation('io.micronaut.test:micronaut-test-spock:3.9.2')
    testImplementation('org.testcontainers:postgresql:1.17.6')
    testImplementation('org.testcontainers:spock:1.19.1')
}

application {
    mainClass.set("com.project.Application")
}

java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

sourceSets {
    integration {
        groovy.srcDir "$projectDir/src/integration/groovy"
        resources.srcDir "$projectDir/src/integration/resources"
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    integrationImplementation.extendsFrom testImplementation
    integrationRuntime.extendsFrom testRuntime
}

task integration(type: Test) {
    useJUnitPlatform()
    testClassesDirs = sourceSets.integration.output.classesDirs
    classpath = sourceSets.integration.runtimeClasspath
}
check.dependsOn integration

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("com.project.*")
    }
    aot {
        // Please review carefully the optimizations enabled below
        // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
    }
}



